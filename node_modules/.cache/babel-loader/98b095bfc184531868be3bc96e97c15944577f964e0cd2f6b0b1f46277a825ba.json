{"ast":null,"code":"var _jsxFileName = \"E:\\\\survey\\\\src\\\\components\\\\SurveyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport * as XLSX from 'xlsx';\nimport './SurveyForm.css';\nimport logo from '../Assets/Images/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyForm = () => {\n  _s();\n  const [currentGroupIndex, setCurrentGroupIndex] = useState(0);\n  const [formData, setFormData] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [animationDirection, setAnimationDirection] = useState(null);\n  const questions = [{\n    text: \"How often do you use food delivery apps?\",\n    options: [\"Daily\", \"In weeks\", \"In months\", \"2-3 months\"]\n  }, {\n    text: \"How frequently do you travel by train?\",\n    options: [\"In weeks\", \"In months\", \"In years\", \"On some vacations\"]\n  }, {\n    text: \"On a scale of 1 to 5, how satisfied are you with the current food options available on trains and train stations?\",\n    options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n  }, {\n    text: \"What would you prefer in food?\",\n    options: [\"Quality over quantity\", \"Quantity over quality\", \"Cheap price over quality\"]\n  }, {\n    text: \"How important is the packaging and presentation of food when it's delivered to you?\",\n    options: [\"100%\", \"80%\", \"50%\", \"30%\"]\n  }, {\n    text: \"What improvements would you like to see in delivery service?\",\n    options: [\"Fast delivery\", \"Reasonable prices\", \"Varieties\"]\n  }, {\n    text: \"Have you ever experienced any issue with food delivery?\",\n    options: [\"Late delivery\", \"Wrong order\", \"Low quality food\"]\n  }, {\n    text: \"Have you ever used a subscription service for food delivery?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"How likely are you to recommend your favorite food delivery to a friend?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Have you ever influenced someone to try a specific restaurant on a food delivery platform?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Would you be more likely to order from a food delivery service that offers exclusive deals or discounts?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Do you use any food delivery services?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Have you ever tried a new food delivery service based on a recommendation from friends or family?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Would you prefer using a food delivery app or getting food by yourself?\",\n    options: [\"By yourself\", \"By food delivery app\"]\n  }, {\n    text: \"Do you trust the quality of food when ordering through a food delivery app?\",\n    options: [\"Yes\", \"No\"]\n  }];\n  const questionsPerPage = 5;\n  const totalPages = Math.ceil(questions.length / questionsPerPage);\n  const nextGroup = () => {\n    setAnimationDirection(\"slideInRight\");\n    setCurrentGroupIndex(prevIndex => Math.min(prevIndex + 1, totalPages - 1));\n  };\n  const prevGroup = () => {\n    setAnimationDirection(\"slideInLeft\");\n    setCurrentGroupIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"Form submitted with data:\", formData);\n    setSubmitted(true);\n    // Check if all questions are answered\n    const answeredQuestions = Object.keys(formData).length;\n    if (answeredQuestions === questions.length) {\n      // Export to Excel only if all questions are answered\n      exportToExcel(formData);\n    } else {\n      // Optionally, you can prevent submission or handle incomplete form state\n      console.error(\"Not all questions answered.\");\n    }\n  };\n  useEffect(() => {\n    setAnimationDirection(null);\n  }, [currentGroupIndex]);\n  const renderQuestions = () => {\n    const startIndex = currentGroupIndex * questionsPerPage;\n    const endIndex = startIndex + questionsPerPage;\n    const currentQuestions = questions.slice(startIndex, endIndex);\n    return currentQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"question\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"radio\",\n          name: `question${startIndex + index}`,\n          value: option,\n          checked: formData[`question${startIndex + index}`] === option,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))]\n    }, startIndex + index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this));\n  };\n  const exportToExcel = data => {\n    const formattedData = questions.map((question, index) => ({\n      Question: question.text,\n      Answer: data[`question${index}`] || \"Not answered\"\n    }));\n    const worksheet = XLSX.utils.json_to_sheet(formattedData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Survey Results\");\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const blob = new Blob([excelBuffer], {\n      type: \"application/octet-stream\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"survey_results.xlsx\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"survey-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"form-title\",\n        children: \"Survey Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: renderQuestions()\n      }, currentGroupIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: prevGroup,\n          disabled: currentGroupIndex === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), currentGroupIndex < totalPages - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: nextGroup,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thank-you\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for submitting the survey!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyForm, \"GWwbPWpOAaoustEYbFaIbMN7HUk=\");\n_c = SurveyForm;\nexport default SurveyForm;\nvar _c;\n$RefreshReg$(_c, \"SurveyForm\");","map":{"version":3,"names":["React","useState","useEffect","motion","XLSX","logo","jsxDEV","_jsxDEV","SurveyForm","_s","currentGroupIndex","setCurrentGroupIndex","formData","setFormData","submitted","setSubmitted","animationDirection","setAnimationDirection","questions","text","options","questionsPerPage","totalPages","Math","ceil","length","nextGroup","prevIndex","min","prevGroup","max","handleInputChange","event","name","value","target","prevFormData","handleSubmit","preventDefault","console","log","answeredQuestions","Object","keys","exportToExcel","error","renderQuestions","startIndex","endIndex","currentQuestions","slice","map","question","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","option","type","checked","onChange","required","data","formattedData","Question","Answer","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","onSubmit","src","alt","div","initial","opacity","animate","exit","transition","duration","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/survey/src/components/SurveyForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport * as XLSX from 'xlsx';\r\nimport './SurveyForm.css';\r\nimport logo from '../Assets/Images/logo.png';\r\n\r\nconst SurveyForm = () => {\r\n  const [currentGroupIndex, setCurrentGroupIndex] = useState(0);\r\n  const [formData, setFormData] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [animationDirection, setAnimationDirection] = useState(null);\r\n\r\n  const questions = [\r\n    {\r\n      text: \"How often do you use food delivery apps?\",\r\n      options: [\"Daily\", \"In weeks\", \"In months\", \"2-3 months\"]\r\n    },\r\n    {\r\n      text: \"How frequently do you travel by train?\",\r\n      options: [\"In weeks\", \"In months\", \"In years\", \"On some vacations\"]\r\n    },\r\n    {\r\n      text: \"On a scale of 1 to 5, how satisfied are you with the current food options available on trains and train stations?\",\r\n      options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    },\r\n    {\r\n      text: \"What would you prefer in food?\",\r\n      options: [\"Quality over quantity\", \"Quantity over quality\", \"Cheap price over quality\"]\r\n    },\r\n    {\r\n      text: \"How important is the packaging and presentation of food when it's delivered to you?\",\r\n      options: [\"100%\", \"80%\", \"50%\", \"30%\"]\r\n    },\r\n    {\r\n      text: \"What improvements would you like to see in delivery service?\",\r\n      options: [\"Fast delivery\", \"Reasonable prices\", \"Varieties\"]\r\n    },\r\n    {\r\n      text: \"Have you ever experienced any issue with food delivery?\",\r\n      options: [\"Late delivery\", \"Wrong order\", \"Low quality food\"]\r\n    },\r\n    {\r\n      text: \"Have you ever used a subscription service for food delivery?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"How likely are you to recommend your favorite food delivery to a friend?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Have you ever influenced someone to try a specific restaurant on a food delivery platform?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Would you be more likely to order from a food delivery service that offers exclusive deals or discounts?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Do you use any food delivery services?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Have you ever tried a new food delivery service based on a recommendation from friends or family?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Would you prefer using a food delivery app or getting food by yourself?\",\r\n      options: [\"By yourself\", \"By food delivery app\"]\r\n    },\r\n    {\r\n      text: \"Do you trust the quality of food when ordering through a food delivery app?\",\r\n      options: [\"Yes\", \"No\"]\r\n    }\r\n  ];\r\n\r\n  const questionsPerPage = 5;\r\n  const totalPages = Math.ceil(questions.length / questionsPerPage);\r\n\r\n  const nextGroup = () => {\r\n    setAnimationDirection(\"slideInRight\");\r\n    setCurrentGroupIndex(prevIndex => Math.min(prevIndex + 1, totalPages - 1));\r\n  };\r\n\r\n  const prevGroup = () => {\r\n    setAnimationDirection(\"slideInLeft\");\r\n    setCurrentGroupIndex(prevIndex => Math.max(prevIndex - 1, 0));\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormData(prevFormData => ({\r\n      ...prevFormData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(\"Form submitted with data:\", formData);\r\n    setSubmitted(true);\r\n    // Check if all questions are answered\r\n    const answeredQuestions = Object.keys(formData).length;\r\n    if (answeredQuestions === questions.length) {\r\n      // Export to Excel only if all questions are answered\r\n      exportToExcel(formData);\r\n    } else {\r\n      // Optionally, you can prevent submission or handle incomplete form state\r\n      console.error(\"Not all questions answered.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAnimationDirection(null);\r\n  }, [currentGroupIndex]);\r\n\r\n  const renderQuestions = () => {\r\n    const startIndex = currentGroupIndex * questionsPerPage;\r\n    const endIndex = startIndex + questionsPerPage;\r\n    const currentQuestions = questions.slice(startIndex, endIndex);\r\n\r\n    return currentQuestions.map((question, index) => (\r\n      <div className=\"form-group\" key={startIndex + index}>\r\n        <label className=\"question\">{question.text}</label>\r\n        {question.options.map(option => (\r\n          <div className=\"form-check\" key={option}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name={`question${startIndex + index}`}\r\n              value={option}\r\n              checked={formData[`question${startIndex + index}`] === option}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n            <label className=\"form-check-label\">\r\n              {option}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const formattedData = questions.map((question, index) => ({\r\n      Question: question.text,\r\n      Answer: data[`question${index}`] || \"Not answered\"\r\n    }));\r\n\r\n    const worksheet = XLSX.utils.json_to_sheet(formattedData);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Survey Results\");\r\n\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\"\r\n    });\r\n\r\n    const blob = new Blob([excelBuffer], {\r\n      type: \"application/octet-stream\"\r\n    });\r\n\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"survey_results.xlsx\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"background\"></div>\r\n      <form className=\"survey-form\" onSubmit={handleSubmit}>\r\n        <img src={logo} alt=\"Logo\" className=\"logo\" />\r\n        <h1 className=\"form-title\">Survey Form</h1>\r\n        <motion.div\r\n          key={currentGroupIndex}\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          {renderQuestions()}\r\n        </motion.div>\r\n        <div className=\"button-group\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={prevGroup}\r\n            disabled={currentGroupIndex === 0}\r\n          >\r\n            Previous\r\n          </button>\r\n          {currentGroupIndex < totalPages - 1 ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={nextGroup}\r\n            >\r\n              Next\r\n            </button>\r\n          ) : (\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n      {submitted && (\r\n        <div className=\"thank-you\">\r\n          <h2>Thank you for submitting the survey!</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}