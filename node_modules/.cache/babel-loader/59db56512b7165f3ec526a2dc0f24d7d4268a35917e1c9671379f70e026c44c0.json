{"ast":null,"code":"var _jsxFileName = \"E:\\\\survey\\\\src\\\\components\\\\SurveyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport XLSX from 'xlsx'; // Import XLSX library\nimport './SurveyForm.css';\nimport logo from '../Assets/Images/logo.png'; // Adjust the path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyForm = () => {\n  _s();\n  const [currentGroupIndex, setCurrentGroupIndex] = useState(0);\n  const [formData, setFormData] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [animationDirection, setAnimationDirection] = useState(null);\n  const questions = [{\n    text: \"How often do you use food delivery apps?\",\n    options: [\"Daily\", \"In weeks\", \"In months\", \"2-3 months\"]\n  }, {\n    text: \"How frequently do you travel by train?\",\n    options: [\"In weeks\", \"In months\", \"In years\", \"On some vacations\"]\n  }, {\n    text: \"On a scale of 1 to 5, how satisfied are you with the current food options available on trains and train stations?\",\n    options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n  }, {\n    text: \"What would you prefer in food?\",\n    options: [\"Quality over quantity\", \"Quantity over quality\", \"Cheap price over quality\"]\n  }, {\n    text: \"How important is the packaging and presentation of food when it's delivered to you?\",\n    options: [\"100%\", \"80%\", \"50%\", \"30%\"]\n  }, {\n    text: \"What improvements would you like to see in delivery service?\",\n    options: [\"Fast delivery\", \"Reasonable prices\", \"Varieties\"]\n  }, {\n    text: \"Have you ever experienced any issue with food delivery?\",\n    options: [\"Late delivery\", \"Wrong order\", \"Low quality food\"]\n  }, {\n    text: \"Have you ever used a subscription service for food delivery?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"How likely are you to recommend your favorite food delivery to a friend?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Have you ever influenced someone to try a specific restaurant on a food delivery platform?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Would you be more likely to order from a food delivery service that offers exclusive deals or discounts?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Do you use any food delivery services?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Have you ever tried a new food delivery service based on a recommendation from friends or family?\",\n    options: [\"Yes\", \"No\"]\n  }, {\n    text: \"Would you prefer using a food delivery app or getting food by yourself?\",\n    options: [\"By yourself\", \"By food delivery app\"]\n  }, {\n    text: \"Do you trust the quality of food when ordering through a food delivery app?\",\n    options: [\"Yes\", \"No\"]\n  }];\n  const questionsPerPage = 5;\n  const totalPages = Math.ceil(questions.length / questionsPerPage);\n  const nextGroup = () => {\n    setAnimationDirection(\"slideInRight\");\n    setCurrentGroupIndex(prevIndex => Math.min(prevIndex + 1, totalPages - 1));\n  };\n  const prevGroup = () => {\n    setAnimationDirection(\"slideInLeft\");\n    setCurrentGroupIndex(prevIndex => Math.max(prevIndex - 1, 0));\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Handle form submission logic here\n    console.log(\"Form submitted with data:\", formData);\n    setSubmitted(true); // Mark form as submitted\n\n    // Optionally, export data to Excel\n    exportToExcel(formData);\n  };\n  useEffect(() => {\n    setAnimationDirection(null); // Reset animation direction after animation completes\n  }, [currentGroupIndex]);\n  const renderQuestions = () => {\n    const startIndex = currentGroupIndex * questionsPerPage;\n    const endIndex = startIndex + questionsPerPage;\n    const currentQuestions = questions.slice(startIndex, endIndex);\n    return currentQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"form-group\",\n      initial: {\n        opacity: 0,\n        x: animationDirection === \"slideInRight\" ? 100 : -100\n      },\n      animate: {\n        opacity: 1,\n        x: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"question\",\n        children: [startIndex + index + 1, \". \", question.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `${startIndex + index}-${i}`,\n          name: `q${startIndex + index}`,\n          value: option,\n          className: \"form-check-input\",\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `${startIndex + index}-${i}`,\n          className: \"form-check-label\",\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))]\n    }, startIndex + index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this));\n  };\n  const exportToExcel = data => {\n    const exportData = Object.entries(data).map(([question, answer]) => ({\n      Question: question,\n      Answer: answer\n    }));\n    const ws = XLSX.utils.json_to_sheet(exportData);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Survey Responses\");\n\n    // Generate a download link for the Excel file\n    XLSX.writeFile(wb, \"survey_responses.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"survey-form p-4\",\n          initial: {\n            opacity: 0,\n            scale: 0.8\n          },\n          animate: {\n            opacity: 1,\n            scale: 1\n          },\n          transition: {\n            duration: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"Logo\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"form-title\",\n            children: \"Survey Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [renderQuestions(), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: prevGroup,\n                disabled: currentGroupIndex === 0,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), currentGroupIndex === totalPages - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary submit-button\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: nextGroup,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyForm, \"GWwbPWpOAaoustEYbFaIbMN7HUk=\");\n_c = SurveyForm;\nexport default SurveyForm;\nvar _c;\n$RefreshReg$(_c, \"SurveyForm\");","map":{"version":3,"names":["React","useState","useEffect","motion","XLSX","logo","jsxDEV","_jsxDEV","SurveyForm","_s","currentGroupIndex","setCurrentGroupIndex","formData","setFormData","submitted","setSubmitted","animationDirection","setAnimationDirection","questions","text","options","questionsPerPage","totalPages","Math","ceil","length","nextGroup","prevIndex","min","prevGroup","max","handleInputChange","event","name","value","target","prevFormData","handleSubmit","preventDefault","console","log","exportToExcel","renderQuestions","startIndex","endIndex","currentQuestions","slice","map","question","index","div","className","initial","opacity","x","animate","transition","duration","children","fileName","_jsxFileName","lineNumber","columnNumber","option","i","type","id","onChange","htmlFor","data","exportData","Object","entries","answer","Question","Answer","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","scale","src","alt","onSubmit","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/survey/src/components/SurveyForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport XLSX from 'xlsx'; // Import XLSX library\r\nimport './SurveyForm.css';\r\nimport logo from '../Assets/Images/logo.png'; // Adjust the path based on your project structure\r\n\r\nconst SurveyForm = () => {\r\n  const [currentGroupIndex, setCurrentGroupIndex] = useState(0);\r\n  const [formData, setFormData] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [animationDirection, setAnimationDirection] = useState(null);\r\n\r\n  const questions = [\r\n    {\r\n      text: \"How often do you use food delivery apps?\",\r\n      options: [\"Daily\", \"In weeks\", \"In months\", \"2-3 months\"]\r\n    },\r\n    {\r\n      text: \"How frequently do you travel by train?\",\r\n      options: [\"In weeks\", \"In months\", \"In years\", \"On some vacations\"]\r\n    },\r\n    {\r\n      text: \"On a scale of 1 to 5, how satisfied are you with the current food options available on trains and train stations?\",\r\n      options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    },\r\n    {\r\n      text: \"What would you prefer in food?\",\r\n      options: [\"Quality over quantity\", \"Quantity over quality\", \"Cheap price over quality\"]\r\n    },\r\n    {\r\n      text: \"How important is the packaging and presentation of food when it's delivered to you?\",\r\n      options: [\"100%\", \"80%\", \"50%\", \"30%\"]\r\n    },\r\n    {\r\n      text: \"What improvements would you like to see in delivery service?\",\r\n      options: [\"Fast delivery\", \"Reasonable prices\", \"Varieties\"]\r\n    },\r\n    {\r\n      text: \"Have you ever experienced any issue with food delivery?\",\r\n      options: [\"Late delivery\", \"Wrong order\", \"Low quality food\"]\r\n    },\r\n    {\r\n      text: \"Have you ever used a subscription service for food delivery?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"How likely are you to recommend your favorite food delivery to a friend?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Have you ever influenced someone to try a specific restaurant on a food delivery platform?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Would you be more likely to order from a food delivery service that offers exclusive deals or discounts?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Do you use any food delivery services?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Have you ever tried a new food delivery service based on a recommendation from friends or family?\",\r\n      options: [\"Yes\", \"No\"]\r\n    },\r\n    {\r\n      text: \"Would you prefer using a food delivery app or getting food by yourself?\",\r\n      options: [\"By yourself\", \"By food delivery app\"]\r\n    },\r\n    {\r\n      text: \"Do you trust the quality of food when ordering through a food delivery app?\",\r\n      options: [\"Yes\", \"No\"]\r\n    }\r\n  ];\r\n\r\n  const questionsPerPage = 5;\r\n  const totalPages = Math.ceil(questions.length / questionsPerPage);\r\n\r\n  const nextGroup = () => {\r\n    setAnimationDirection(\"slideInRight\");\r\n    setCurrentGroupIndex((prevIndex) => Math.min(prevIndex + 1, totalPages - 1));\r\n  };\r\n\r\n  const prevGroup = () => {\r\n    setAnimationDirection(\"slideInLeft\");\r\n    setCurrentGroupIndex((prevIndex) => Math.max(prevIndex - 1, 0));\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Handle form submission logic here\r\n    console.log(\"Form submitted with data:\", formData);\r\n    setSubmitted(true); // Mark form as submitted\r\n\r\n    // Optionally, export data to Excel\r\n    exportToExcel(formData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAnimationDirection(null); // Reset animation direction after animation completes\r\n  }, [currentGroupIndex]);\r\n\r\n  const renderQuestions = () => {\r\n    const startIndex = currentGroupIndex * questionsPerPage;\r\n    const endIndex = startIndex + questionsPerPage;\r\n    const currentQuestions = questions.slice(startIndex, endIndex);\r\n\r\n    return currentQuestions.map((question, index) => (\r\n      <motion.div\r\n        className=\"form-group\"\r\n        key={startIndex + index}\r\n        initial={{ opacity: 0, x: animationDirection === \"slideInRight\" ? 100 : -100 }}\r\n        animate={{ opacity: 1, x: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <label className=\"question\">{startIndex + index + 1}. {question.text}</label>\r\n        {question.options.map((option, i) => (\r\n          <div key={i} className=\"form-check\">\r\n            <input\r\n              type=\"radio\"\r\n              id={`${startIndex + index}-${i}`}\r\n              name={`q${startIndex + index}`}\r\n              value={option}\r\n              className=\"form-check-input\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <label htmlFor={`${startIndex + index}-${i}`} className=\"form-check-label\">{option}</label>\r\n          </div>\r\n        ))}\r\n      </motion.div>\r\n    ));\r\n  };\r\n\r\n  const exportToExcel = (data) => {\r\n    const exportData = Object.entries(data).map(([question, answer]) => ({\r\n      Question: question,\r\n      Answer: answer,\r\n    }));\r\n\r\n    const ws = XLSX.utils.json_to_sheet(exportData);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Survey Responses\");\r\n\r\n    // Generate a download link for the Excel file\r\n    XLSX.writeFile(wb, \"survey_responses.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-lg-8\">\r\n          <div className=\"background\"></div>\r\n          <motion.div\r\n            className=\"survey-form p-4\"\r\n            initial={{ opacity: 0, scale: 0.8 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.5 }}\r\n          >\r\n            <img src={logo} alt=\"Logo\" className=\"logo\" /> {/* Logo before the title */}\r\n            <h1 className=\"form-title\">Survey Form</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              {renderQuestions()}\r\n              <div className=\"d-flex justify-content-between mt-4\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={prevGroup} disabled={currentGroupIndex === 0}>Previous</button>\r\n                {currentGroupIndex === totalPages - 1 ? (\r\n                  <button type=\"submit\" className=\"btn btn-primary submit-button\">Submit</button>\r\n                ) : (\r\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={nextGroup}>Next</button>\r\n                )}\r\n              </div>\r\n            </form>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurveyForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,IAAI,MAAM,MAAM,CAAC,CAAC;AACzB,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAMiB,SAAS,GAAG,CAChB;IACEC,IAAI,EAAE,0CAA0C;IAChDC,OAAO,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,YAAY;EAC1D,CAAC,EACD;IACED,IAAI,EAAE,wCAAwC;IAC9CC,OAAO,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,mBAAmB;EACpE,CAAC,EACD;IACED,IAAI,EAAE,mHAAmH;IACzHC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;EACnC,CAAC,EACD;IACED,IAAI,EAAE,gCAAgC;IACtCC,OAAO,EAAE,CAAC,uBAAuB,EAAE,uBAAuB,EAAE,0BAA0B;EACxF,CAAC,EACD;IACED,IAAI,EAAE,qFAAqF;IAC3FC,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACvC,CAAC,EACD;IACED,IAAI,EAAE,8DAA8D;IACpEC,OAAO,EAAE,CAAC,eAAe,EAAE,mBAAmB,EAAE,WAAW;EAC7D,CAAC,EACD;IACED,IAAI,EAAE,yDAAyD;IAC/DC,OAAO,EAAE,CAAC,eAAe,EAAE,aAAa,EAAE,kBAAkB;EAC9D,CAAC,EACD;IACED,IAAI,EAAE,8DAA8D;IACpEC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI;EACvB,CAAC,EACD;IACED,IAAI,EAAE,0EAA0E;IAChFC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI;EACvB,CAAC,EACD;IACED,IAAI,EAAE,4FAA4F;IAClGC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI;EACvB,CAAC,EACD;IACED,IAAI,EAAE,0GAA0G;IAChHC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI;EACvB,CAAC,EACD;IACED,IAAI,EAAE,wCAAwC;IAC9CC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI;EACvB,CAAC,EACD;IACED,IAAI,EAAE,mGAAmG;IACzGC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI;EACvB,CAAC,EACD;IACED,IAAI,EAAE,yEAAyE;IAC/EC,OAAO,EAAE,CAAC,aAAa,EAAE,sBAAsB;EACjD,CAAC,EACD;IACED,IAAI,EAAE,6EAA6E;IACnFC,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI;EACvB,CAAC,CACF;EAED,MAAMC,gBAAgB,GAAG,CAAC;EAC1B,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACN,SAAS,CAACO,MAAM,GAAGJ,gBAAgB,CAAC;EAEjE,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtBT,qBAAqB,CAAC,cAAc,CAAC;IACrCN,oBAAoB,CAAEgB,SAAS,IAAKJ,IAAI,CAACK,GAAG,CAACD,SAAS,GAAG,CAAC,EAAEL,UAAU,GAAG,CAAC,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtBZ,qBAAqB,CAAC,aAAa,CAAC;IACpCN,oBAAoB,CAAEgB,SAAS,IAAKJ,IAAI,CAACO,GAAG,CAACH,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCtB,WAAW,CAAEuB,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAIL,KAAK,IAAK;IAC9BA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE5B,QAAQ,CAAC;IAClDG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEpB;IACA0B,aAAa,CAAC7B,QAAQ,CAAC;EACzB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACde,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACP,iBAAiB,CAAC,CAAC;EAEvB,MAAMgC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGjC,iBAAiB,GAAGW,gBAAgB;IACvD,MAAMuB,QAAQ,GAAGD,UAAU,GAAGtB,gBAAgB;IAC9C,MAAMwB,gBAAgB,GAAG3B,SAAS,CAAC4B,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;IAE9D,OAAOC,gBAAgB,CAACE,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC1C1C,OAAA,CAACJ,MAAM,CAAC+C,GAAG;MACTC,SAAS,EAAC,YAAY;MAEtBC,OAAO,EAAE;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAEtC,kBAAkB,KAAK,cAAc,GAAG,GAAG,GAAG,CAAC;MAAI,CAAE;MAC/EuC,OAAO,EAAE;QAAEF,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAC9BE,UAAU,EAAE;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAAC,QAAA,gBAE9BnD,OAAA;QAAO4C,SAAS,EAAC,UAAU;QAAAO,QAAA,GAAEf,UAAU,GAAGM,KAAK,GAAG,CAAC,EAAC,IAAE,EAACD,QAAQ,CAAC7B,IAAI;MAAA;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC5Ed,QAAQ,CAAC5B,OAAO,CAAC2B,GAAG,CAAC,CAACgB,MAAM,EAAEC,CAAC,kBAC9BzD,OAAA;QAAa4C,SAAS,EAAC,YAAY;QAAAO,QAAA,gBACjCnD,OAAA;UACE0D,IAAI,EAAC,OAAO;UACZC,EAAE,EAAG,GAAEvB,UAAU,GAAGM,KAAM,IAAGe,CAAE,EAAE;UACjC/B,IAAI,EAAG,IAAGU,UAAU,GAAGM,KAAM,EAAE;UAC/Bf,KAAK,EAAE6B,MAAO;UACdZ,SAAS,EAAC,kBAAkB;UAC5BgB,QAAQ,EAAEpC;QAAkB;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFvD,OAAA;UAAO6D,OAAO,EAAG,GAAEzB,UAAU,GAAGM,KAAM,IAAGe,CAAE,EAAE;UAACb,SAAS,EAAC,kBAAkB;UAAAO,QAAA,EAAEK;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GATnFE,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUN,CACN,CAAC;IAAA,GAlBGnB,UAAU,GAAGM,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBb,CACb,CAAC;EACJ,CAAC;EAED,MAAMrB,aAAa,GAAI4B,IAAI,IAAK;IAC9B,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACtB,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEyB,MAAM,CAAC,MAAM;MACnEC,QAAQ,EAAE1B,QAAQ;MAClB2B,MAAM,EAAEF;IACV,CAAC,CAAC,CAAC;IAEH,MAAMG,EAAE,GAAGxE,IAAI,CAACyE,KAAK,CAACC,aAAa,CAACR,UAAU,CAAC;IAC/C,MAAMS,EAAE,GAAG3E,IAAI,CAACyE,KAAK,CAACG,QAAQ,CAAC,CAAC;IAChC5E,IAAI,CAACyE,KAAK,CAACI,iBAAiB,CAACF,EAAE,EAAEH,EAAE,EAAE,kBAAkB,CAAC;;IAExD;IACAxE,IAAI,CAAC8E,SAAS,CAACH,EAAE,EAAE,uBAAuB,CAAC;EAC7C,CAAC;EAED,oBACExE,OAAA;IAAK4C,SAAS,EAAC,WAAW;IAAAO,QAAA,eACxBnD,OAAA;MAAK4C,SAAS,EAAC,4BAA4B;MAAAO,QAAA,eACzCnD,OAAA;QAAK4C,SAAS,EAAC,UAAU;QAAAO,QAAA,gBACvBnD,OAAA;UAAK4C,SAAS,EAAC;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClCvD,OAAA,CAACJ,MAAM,CAAC+C,GAAG;UACTC,SAAS,EAAC,iBAAiB;UAC3BC,OAAO,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAE8B,KAAK,EAAE;UAAI,CAAE;UACpC5B,OAAO,EAAE;YAAEF,OAAO,EAAE,CAAC;YAAE8B,KAAK,EAAE;UAAE,CAAE;UAClC3B,UAAU,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAAAC,QAAA,gBAE9BnD,OAAA;YAAK6E,GAAG,EAAE/E,IAAK;YAACgF,GAAG,EAAC,MAAM;YAAClC,SAAS,EAAC;UAAM;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,eAC/CvD,OAAA;YAAI4C,SAAS,EAAC,YAAY;YAAAO,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3CvD,OAAA;YAAM+E,QAAQ,EAAEjD,YAAa;YAAAqB,QAAA,GAC1BhB,eAAe,CAAC,CAAC,eAClBnC,OAAA;cAAK4C,SAAS,EAAC,qCAAqC;cAAAO,QAAA,gBAClDnD,OAAA;gBAAQ0D,IAAI,EAAC,QAAQ;gBAACd,SAAS,EAAC,iBAAiB;gBAACoC,OAAO,EAAE1D,SAAU;gBAAC2D,QAAQ,EAAE9E,iBAAiB,KAAK,CAAE;gBAAAgD,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACzHpD,iBAAiB,KAAKY,UAAU,GAAG,CAAC,gBACnCf,OAAA;gBAAQ0D,IAAI,EAAC,QAAQ;gBAACd,SAAS,EAAC,+BAA+B;gBAAAO,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,gBAE/EvD,OAAA;gBAAQ0D,IAAI,EAAC,QAAQ;gBAACd,SAAS,EAAC,iBAAiB;gBAACoC,OAAO,EAAE7D,SAAU;gBAAAgC,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACnF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrD,EAAA,CAlLID,UAAU;AAAAiF,EAAA,GAAVjF,UAAU;AAoLhB,eAAeA,UAAU;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}